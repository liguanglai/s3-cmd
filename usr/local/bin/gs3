#!/usr/bin/env bash

# 函数：解析 S3 URL
parse_s3_url() {
    local s3_url=$1
    if [[ $s3_url =~ s3://([^/]+)/(.*)$ ]]; then
        echo "${BASH_REMATCH[1]}" "${BASH_REMATCH[2]%/}"
    else
        echo "Invalid S3 URL format. Please use s3://bucket-name/path/to/folder/" >&2
        exit 1
    fi
}

# 函数：计数文件行数
count_lines() {
    local bucket=$1
    local prefix=$2
    local profile=$3

    echo "Counting lines in s3://${bucket}/${prefix}/"
    echo "Using AWS profile: $profile"
    echo

    echo -e "No.\tFile Name\tLines"

    local total_lines=0
    local file_count=0

    while read -r line; do
        local file_name=$(echo $line | awk '{print $4}')
        if [[ ! -z "$file_name" ]]; then
            ((file_count++))
            local lines=$(aws s3 cp "s3://${bucket}/${file_name}" - --profile "$profile" 2>/dev/null | wc -l)
            echo -e "$file_count\t$file_name\t$lines"
            ((total_lines += lines))
        fi
    done < <(aws s3 ls "s3://${bucket}/${prefix}/" --recursive --profile "$profile")

    echo -e "\nSummary:"
    echo -e "Total files processed:\t$file_count"
    echo -e "Total lines across all files:\t$total_lines"
}

# 函数：下载文件或目录
download() {
    local s3_path=$1
    local profile=$2
    local dest_dir="/Users/ligl/Downloads/00.Mac-dls/05.ok_aws3dl"
    local date_dir=$(date +"%Y%m%d")
    local full_dest_dir="${dest_dir}/${date_dir}"

    mkdir -p "$full_dest_dir"

    local bucket prefix
    read bucket prefix < <(parse_s3_url "$s3_path")

    echo "Downloading from s3://${bucket}/${prefix}"
    aws s3 cp "s3://${bucket}/${prefix}" "${full_dest_dir}/" --recursive --profile "$profile"

    echo "Downloaded to ${full_dest_dir}"
    open "$full_dest_dir"
}

# 主函数
main() {
    local PROFILE="default"
    local MODE="count"
    local PATHS=()

    # 解析命令行参数
    while [[ $# -gt 0 ]]; do
        case $1 in
            -n|--count)
                MODE="count"
                shift
                ;;
            -d|--download)
                MODE="download"
                shift
                ;;
            -p|--profile)
                PROFILE="$2"
                shift 2
                ;;
            *)
                if [[ $1 == s3://* ]]; then
                    PATHS+=("$1")
                else
                    echo "Invalid argument: $1" >&2
                    exit 1
                fi
                shift
                ;;
        esac
    done

    if [ ${#PATHS[@]} -eq 0 ]; then
        echo "No S3 path specified." >&2
        exit 1
    fi

    for path in "${PATHS[@]}"; do
        local bucket prefix
        read bucket prefix < <(parse_s3_url "$path")

        if [ "$MODE" = "download" ]; then
            download "$path" "$PROFILE"
        else
            count_lines "$bucket" "$prefix" "$PROFILE"
        fi
    done
}

main "$@"
